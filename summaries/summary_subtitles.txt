Data structures are super important to know for technical coding interviews and computer science in general. In this video im going to be breaking down some of the most popular data structures out there what they look like and how they operate real world examples so you can actually picture what im talking about. The different time complexities that different data structures can have. Jumping pages were cutting the amount of time that were looking in our search by a half. The search space of the operation just gets smaller and smaller and actually if you look at a logarithm graph the difference in the output is so small and so marginal. The stack is a simple structure that follows a last in first out principle meaning the last element added is the first one to be removed. Unlike arrays you can only access or modify elements from the top of the stack this makes retrieval and insertion extremely efficient. The next data structure were going to talk about is the heap or priority cu. The next data structure were going to talk about is the hashmap. A hashmap stores data using key value pairs where each key is run through a hash function that determines where the value should be stored. This makes lookups on hash maps extremely efficient time complexity wise being 0 of one however if too many items hash to the same mailbox which we call a hash collision. The definition of a set is an unordered collection of unique elements typically implemented using a hash table. The efficiency of a hash map with the hash function this makes checking for the existence of an element extremely fast which means 0 of one on average time. Unlike a razor link list sets dont store duplicates and they dont maintain a specific order.